version: 2.1

orbs:
  docker: circleci/docker@2.6.0

parameters:
  workflow-api:
    type: boolean
    default: false
  workflow-front:
    type: boolean
    default: false

references:
  setup_env_node: &setup_env_node
    docker:
      - image: cimg/node:22.6
  attach_workspace: &attach_workspace
    at: ~/project
  restore_node_cache: &restore_node_cache
    keys:
      - node-module-cache-{{ checksum "./yarn.lock" }}

jobs:
  build-front:
    <<: *setup_env_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - restore_cache: *restore_node_cache
      - run: yarn nx build front
      - persist_to_workspace:
          root: .
          paths:
            - dist

  deploy-front:
    <<: *setup_env_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run:
          name: Install firebase-tools
          command: curl -sL https://firebase.tools | bash
      - run:
          name: Deploy application
          command: |
            echo $FIREBASE_JSON > firebase_auth.json
            export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase_auth.json"
            firebase deploy -P production -m "Workflow $CIRCLE_WORKFLOW_ID, build $CIRCLE_WORKFLOW_JOB_ID" --non-interactive

  build-api:
    <<: *setup_env_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - restore_cache: *restore_node_cache
      - run: yarn nx build api

  deploy-api:
    docker:
      - image: cimg/base:2024.07
    steps:
      - add_ssh_keys:
          fingerprints:
            - "dc:fe:f2:aa:b8:c3:82:22:25:d5:75:ce:5e:55:ba:6a"
      - run:
          name: Deploy on Server
          command: |
            ssh -o "StrictHostKeyChecking no" -i ~/.ssh/id_rsa_dcfef2aab8c3822225d575ce5e55ba6a $OVH_SERVER_USER@$OVH_SERVER_URL -p $OVH_SERVER_PORT "cd /home/circleci/wishlist-api && ./deploy.sh $CIRCLE_SHA1"
      - run:
          name: Check Health
          command: |
            HEALTH_URL="https://api.wishlistapp.fr/health"
            counter=0
            max_tries=20
            while [[ $(curl -s -f $HEALTH_URL | grep "UP") == "" ]] && [[ $counter -lt $max_tries ]]; do
              echo 'API not ready, retrying in 5s...'
              sleep 5
              ((counter=counter+1))
            done
            if [[ $counter -eq $max_tries ]]; then
              echo 'Too many attempts'
              exit 1
            fi
            echo 'API is up, exiting'
            exit 0

workflows:
  build-and-release-api:
    when: << pipeline.parameters.workflow-api >>
    jobs:
      - build-api:
          name: build
          filters:
            branches:
              ignore:
                - main

      - docker/publish:
          name: build-and-publish
          image: ughoste/wishlist-api
          attach-at: ~/project
          dockerfile: 'apps/api/Dockerfile'
          context:
            - DOCKER_CREDENDIALS
          tag: '${CIRCLE_SHA1},latest'
          filters:
            branches:
              only:
                - main
#      - deploy-api:
#          name: deploy
#          filters:
#            branches:
#              only:
#                - main
#          requires:
#            - build-and-publish

  build-and-release-front:
    when: << pipeline.parameters.workflow-front >>
    jobs:
      - build-front:
          name: build

      - deploy-front-trigger:
          name: deploy-trigger
          type: approval
          filters:
            branches:
              only:
                - main

      - deploy-front:
          name: deploy
          requires:
            - build
            - deploy-trigger
          filters:
            branches:
              only:
                - main
