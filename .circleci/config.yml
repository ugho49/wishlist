version: 2.1

orbs:
  nx: nrwl/nx@1.6.2
  docker: circleci/docker@2.8.0

references:
  setup_env_node: &setup_env_node
    docker:
      - image: cimg/node:22.11
  nx/set-shas: &nx_set_shas_option
    error-on-no-successful-workflow: false
    main-branch-name: main
    workflow-name: ci
  attach_workspace: &attach_workspace
    at: ~/project
  save_node_cache: &save_node_cache
    key: node-yarn-module-cache-{{ checksum "./yarn.lock" }}
    paths:
      - node_modules
      - .yarn
  restore_node_cache: &restore_node_cache
    keys:
      - node-yarn-module-cache-{{ checksum "./yarn.lock" }}

jobs:
  main:
    <<: *setup_env_node
    environment:
      TESTCONTAINERS_HOST_OVERRIDE: "localhost"
    steps:
      - checkout
      - restore_cache: *restore_node_cache
      - run: yarn install --immutable
      - save_cache: *save_node_cache
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
      - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="build"
      - nx/set-shas: *nx_set_shas_option
      - run: yarn nx affected --base=$NX_BASE --head=$NX_HEAD -t typecheck,lint,test,build --parallel 4
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Testcontainers tunnel
          background: true
          command: .circleci/autoforward.py
      - run:
          command: npx nx-cloud record -- yarn nx affected --target=test:int --base=$NX_BASE --head=$NX_HEAD --parallel --max-parallel=3  --output-style=stream --no-agents
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/integration
            JEST_JUNIT_UNIQUE_OUTPUT_NAME: 'true'
            JEST_JUNIT_ADD_FILE_ATTRIBUTE: 'true'
      - persist_to_workspace:
          root: .
          paths:
            - dist

  deploy-front:
    <<: *setup_env_node
    steps:
      - checkout
      - attach_workspace: *attach_workspace
      - run:
          name: Install firebase-tools
          command: curl -sL https://firebase.tools | bash
      - run:
          name: Deploy application
          command: |
            echo $FIREBASE_JSON > firebase_auth.json
            export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase_auth.json"
            firebase deploy -P production -m "Workflow $CIRCLE_WORKFLOW_ID, build $CIRCLE_WORKFLOW_JOB_ID" --non-interactive

workflows:
  ci:
    jobs:
      - main
      - docker/publish:
          name: build-and-publish
          image: ughoste/wishlist-api
          attach-at: ~/project
          dockerfile: 'apps/api/Dockerfile'
          context:
            - DOCKER_CREDENDIALS
          tag: '${CIRCLE_SHA1},latest'
          requires:
            - main
          filters:
            branches:
              only:
                - main
      - deploy-front-trigger:
          name: deploy-front-trigger
          type: approval
          requires:
            - main
          filters:
            branches:
              only:
                - main
      - deploy-front:
          name: deploy
          requires:
            - deploy-front-trigger
          filters:
            branches:
              only:
                - main
